services:
  postgres:
    image: postgres:16
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-meteoriscool}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d ${POSTGRES_DB:-postgres}']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
      start_interval: 2s
    command: >
      postgres
      -c shared_buffers=1GB
      -c effective_cache_size=2GB
      -c maintenance_work_mem=256MB
      -c work_mem=16MB
      -c max_connections=200
      -c max_worker_processes=3
      -c max_parallel_workers=3
      -c max_parallel_workers_per_gather=2
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c wal_buffers=32MB
      -c min_wal_size=512MB
      -c max_wal_size=2GB
      -c checkpoint_completion_target=0.9
      -c default_statistics_target=100
      -c autovacuum_max_workers=3
      -c autovacuum_vacuum_scale_factor=0.1
      -c autovacuum_analyze_scale_factor=0.05

  cobalt-api:
    image: ghcr.io/imputnet/cobalt:10
    container_name: cobalt-api
    init: true
    read_only: true
    restart: unless-stopped
    environment:
      API_URL: 'http://cobalt-api:9000'
    labels:
      - com.centurylinklabs.watchtower.scope=cobalt
    healthcheck:
      test: ['CMD', 'wget', '--spider', '--quiet', 'http://localhost:9000']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
      start_interval: 2s
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 256M

  cobalt-watchtower:
    image: ghcr.io/containrrr/watchtower:latest
    container_name: cobalt-watchtower
    restart: unless-stopped
    command: --cleanup --scope cobalt --schedule "0 0 1 * * *" --include-restarting
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      resources:
        limits:
          memory: 256M

  app:
    build:
      context: .
      target: release
    container_name: app
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD:-meteoriscool}@postgres:5432/${POSTGRES_DB:-postgres}?schema=public
      COBALT_API_URL: http://cobalt-api:9000
      NODE_ENV: production
      DISCORD_TOKEN: ${DISCORD_TOKEN}
    depends_on:
      postgres:
        condition: service_healthy
      cobalt-api:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 512M

volumes:
  postgres_data:
    driver: local
